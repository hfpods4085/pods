---
name: Single Feed
run-name: ${{inputs.platform}} ${{inputs.name}}
on:
  workflow_dispatch:
    inputs:
      name:
        required: true
        description: feed name in config
        type: string
      platform:
        required: true
        description: social media platform
        type: choice
        options:
          - youtube
          - bilibili

permissions: write-all
concurrency:
  group: ${{inputs.platform}}-${{inputs.name}}
  cancel-in-progress: false

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: fetch ffmpeg md5
        run: curl -sSLf https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-amd64-static.tar.xz.md5 -o ffmpeg.md5

      - uses: actions/cache@v4
        id: cache-ffmpeg
        with:
          path: |
            ~/.local/bin/ffmpeg
            ~/.local/bin/ffprobe
          key: ${{ runner.os }}-ffmpeg-${{ hashFiles('ffmpeg.md5') }}

      - name: Install ffmpeg
        if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
        shell: bash
        run: |
          if [ ! -x "$HOME/.local/bin/ffmpeg" ]; then
          mkdir -p ~/.local/bin
          curl -fsSL -o /tmp/ffmpeg.tar.gz "https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-amd64-static.tar.xz"
          tar --extract --strip-components=1 --file /tmp/ffmpeg.tar.gz -C ~/.local/bin/ --wildcards '*/ffmpeg' '*/ffprobe'
          fi

      - uses: actions/cache@v4
        id: cache-proxy
        with:
          path: |
            ~/.local/bin/v2ray
            ~/.local/bin/config.json
          key: ${{ runner.os }}-proxy

      - name: Install proxy
        if: steps.cache-proxy.outputs.cache-hit != 'true'
        shell: bash
        run: |
          if [ ! -x "$HOME/.local/bin/v2ray" ]; then
          mkdir -p ~/.local/bin
          curl -fsSL -o /tmp/v2ray.zip "https://github.com/v2fly/v2ray-core/releases/download/v4.45.2/v2ray-linux-64.zip"
          unzip -d /tmp /tmp/v2ray.zip
          mv /tmp/v2ray ~/.local/bin
          curl -fsSL -o ~/.local/bin/config.json "${{ secrets.PROXY_URL }}"
          fi

      - uses: mamba-org/setup-micromamba@v1
        name: Setup micromamba environment
        with:
          micromamba-version: latest
          environment-file: environment.yml
          environment-name: ci
          cache-environment: true
          cache-downloads: false
          log-level: info

      - name: Download releases
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |-
          gh release download metadata -D metadata --clobber --pattern ${{inputs.name}}.json || true
          gh release download audio -D audio --clobber --pattern ${{inputs.name}}.xml || true
          gh release download video -D video --clobber --pattern ${{inputs.name}}.xml || true

      - name: Sync YouTube
        if: ${{ inputs.platform == 'youtube' }}
        timeout-minutes: 120
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_TG_TARGET: ${{ secrets.DEFAULT_TG_TARGET }}
          VIDEOGRAM_TG_SESSION_STRING: ${{ secrets.VIDEOGRAM_TG_SESSION_STRING }}
          VIDEOGRAM_YT_LANG: ${{ secrets.VIDEOGRAM_YT_LANG }}
        shell: micromamba-shell {0}
        run: |-
          python podsync/youtube.py --name ${{inputs.name}} --config config/youtube.json
          python podsync/clean-up.py --name ${{inputs.name}} --config config/youtube.json --keep 40

      - name: Get Bilibili Cookies
        if: ${{ inputs.platform == 'bilibili' }}
        env:
          COOKIE_CLOUD_SERVER: ${{ secrets.COOKIE_CLOUD_SERVER }}
          COOKIE_CLOUD_KEY: ${{ secrets.COOKIE_CLOUD_KEY }}
          COOKIE_CLOUD_PASS: ${{ secrets.COOKIE_CLOUD_PASS }}
        shell: micromamba-shell {0}
        run: |-
          python scripts/get-cookies.py -d bilibili.com -p ~/.config/videogram/cookies/bilibili.txt --no-subdomain

      - name: Set proxy for Bilibili
        if: ${{ inputs.platform == 'bilibili' }}
        shell: bash
        run: |-
          nohup ~/.local/bin/v2ray -c ~/.local/bin/config.json > /dev/null 2>&1 &

      - name: Sync Bilibili
        if: ${{ inputs.platform == 'bilibili' }}
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_TG_TARGET: ${{ secrets.DEFAULT_TG_TARGET }}
          VIDEOGRAM_TG_SESSION_STRING: ${{ secrets.VIDEOGRAM_TG_SESSION_STRING }}
          VIDEOGRAM_YT_LANG: ${{ secrets.VIDEOGRAM_YT_LANG }}
          VIDEOGRAM_PROXY: socks5://127.0.0.1:7890
          RSSHUB_URL: ${{ secrets.RSSHUB_URL }}
        shell: micromamba-shell {0}
        run: |-
          python podsync/bilibili.py --name ${{inputs.name}} --config config/bilibili.json
          python podsync/clean-up.py --name ${{inputs.name}} --config config/bilibili.json --keep 40
